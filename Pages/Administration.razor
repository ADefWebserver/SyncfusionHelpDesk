@page "/administration"
@using SyncfusionHelpDesk.Data;
@inherits OwningComponentBase<SyncfusionHelpDeskService>

<AuthorizeView Roles="Administrators">
    <div>
        <div id="target" style="height: 500px;">
            <EjsGrid ID="Grid"
                     @ref="gridObj"
                     DataSource="@colHelpDeskTickets"
                     AllowPaging="true"
                     AllowSorting="true">
                <GridPageSettings PageSize="5"></GridPageSettings>
                <GridEvents CommandClicked="OnCommandClicked"
                            TValue="HelpDeskTickets">
                </GridEvents>
                <GridColumns>
                    <GridColumn HeaderText="" TextAlign="TextAlign.Left" Width="75">
                        <GridCommandColumns>
                            <GridCommandColumn ButtonOption="@(new CommandButtonOptions() 
                                                               { Content = "Edit" })">
                            </GridCommandColumn>
                        </GridCommandColumns>
                    </GridColumn>
                    <GridColumn IsPrimaryKey="true" Field=@nameof(HelpDeskTickets.Id)
                                HeaderText="ID #" TextAlign="@TextAlign.Left" Width="80"></GridColumn>
                    <GridColumn Field=@nameof(HelpDeskTickets.TicketStatus)
                                HeaderText="Status" TextAlign="@TextAlign.Left" Width="80"></GridColumn>
                    <GridColumn Field=@nameof(HelpDeskTickets.TicketDate)
                                HeaderText="Date" TextAlign="@TextAlign.Left" Width="80"></GridColumn>
                    <GridColumn Field=@nameof(HelpDeskTickets.TicketDescription)
                                HeaderText="Description" TextAlign="@TextAlign.Left" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(HelpDeskTickets.TicketRequesterEmail)
                                HeaderText="Requester" TextAlign="@TextAlign.Left" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>
        </div>
    </div>
    <EjsDialog Target="#target" Width="500px" Height="500px" IsModal="true" ShowCloseIcon="true"
               @bind-Visible="EditDialogVisibility">
        <DialogTemplates>
            <Header> EDIT TICKET </Header>
            <Content><EditTicket SelectedTicket="@SelectedTicket" /></Content>
            <FooterTemplate>
                <div class="button-container">
                    <button type="submit" 
                            class="e-btn e-normal e-primary" 
                            @onclick="SaveTicket">Save</button>
                </div>
            </FooterTemplate>
        </DialogTemplates>
    </EjsDialog>
</AuthorizeView>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    EjsGrid<HelpDeskTickets> gridObj;
    public IQueryable<HelpDeskTickets> colHelpDeskTickets { get; set; }
    private HelpDeskTickets SelectedTicket = new HelpDeskTickets();
    public bool EditDialogVisibility { get; set; } = false;

    protected override void OnInitialized()
    {
        colHelpDeskTickets = @Service.GetHelpDeskTickets();
    }

    public void OnCommandClicked(CommandClickEventArgs<HelpDeskTickets> args)
    {
        SelectedTicket = args.RowData;
        this.EditDialogVisibility = true;
    }

    public async Task SaveTicket()
    {
        var result = await @Service.UpdateTicketAsync(SelectedTicket);
        this.EditDialogVisibility = false;
        gridObj.Refresh();
    }
}