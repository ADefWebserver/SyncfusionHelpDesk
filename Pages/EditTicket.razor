@using System.Security.Claims;
@using SyncfusionHelpDesk.Data;
@using Syncfusion.EJ2.Blazor.DropDowns
@inherits OwningComponentBase<SyncfusionHelpDeskService>
<div>
    <EjsDropDownList TItem="HelpDeskStatus" Enabled="!isReadOnly"
                     TValue="string" PopupHeight="230px" Index=0
                     Placeholder="Ticket Status"
                     DataSource="@HelpDeskStatus.Statuses"
                     FloatLabelType="@FloatLabelType.Always"
                     @bind-Value="@SelectedTicket.TicketStatus">
        <DropDownListFieldSettings Text="Text"
                                   Value="ID">
        </DropDownListFieldSettings>
    </EjsDropDownList>
</div>
<div>
    <EjsDatePicker ID="TicketDate" Enabled="!isReadOnly"
                   Placeholder="Ticket Date"
                   FloatLabelType="@FloatLabelType.Always"
                   @bind-Value="@SelectedTicket.TicketDate"
                   Max="DateTime.Now"
                   ShowClearButton="false">
    </EjsDatePicker>
</div>
<div>
    <EjsTextBox Enabled="!isReadOnly" Placeholder="Ticket Description"
                FloatLabelType="@FloatLabelType.Always"
                @bind-Value="@SelectedTicket.TicketDescription">
    </EjsTextBox>
</div>
<div>
    <EjsTextBox Enabled="!isReadOnly" Placeholder="Requester Email"
                FloatLabelType="@FloatLabelType.Always"
                @bind-Value="@SelectedTicket.TicketRequesterEmail">
    </EjsTextBox>
</div>
@if (SelectedTicket.HelpDeskTicketDetails != null)
{
    @if (SelectedTicket.HelpDeskTicketDetails.Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var TicketDetail in
                SelectedTicket.HelpDeskTicketDetails)
                {
                    <tr>
                        <td>
                            @TicketDetail.TicketDetailDate.ToShortDateString()
                        </td>
                        <td>
                            @TicketDetail.TicketDescription
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <EjsTextBox Placeholder="NewHelp Desk Ticket Detail"
                @bind-Value="@NewHelpDeskTicketDetail">
    </EjsTextBox>
    <EjsButton CssClass="e-small e-success"
               @onclick="AddHelpDeskTicketDetail">
        Add
    </EjsButton>
}
<br />
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public HelpDeskTickets SelectedTicket { get; set; }

    public bool isReadOnly = true;
    ClaimsPrincipal CurrentUser = new ClaimsPrincipal();

    string NewHelpDeskTicketDetail = "";

    protected override async Task OnInitializedAsync()
    {
        // Get the current user
        CurrentUser = (await authenticationStateTask).User;

        // If there is a logged in user
        // they are an Administrator
        // Enable editing
        isReadOnly = !CurrentUser.Identity.IsAuthenticated;
    }

    private void AddHelpDeskTicketDetail()
    {
        // Create New HelpDeskTicketDetails record
        HelpDeskTicketDetails NewHelpDeskTicketDetails =
            new HelpDeskTicketDetails();

        NewHelpDeskTicketDetails.HelpDeskTicketId =
            SelectedTicket.Id;

        NewHelpDeskTicketDetails.TicketDetailDate =
            DateTime.Now;

        NewHelpDeskTicketDetails.TicketDescription =
            NewHelpDeskTicketDetail;

        // Add to collection
        SelectedTicket.HelpDeskTicketDetails
            .Add(NewHelpDeskTicketDetails);

        // Clear the Text Box
        NewHelpDeskTicketDetail = "";
    }
}